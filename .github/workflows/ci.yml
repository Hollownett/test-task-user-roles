name: CI (Backend + Frontend E2E)

on:
  push:
    branches: [ main, develop ]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  BACKEND_DIR: ./backend
  FRONTEND_DIR: ./frontend

jobs:
  backend-tests:
    name: Backend Build & Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            ${{ env.BACKEND_DIR }}/package-lock.json

      - name: Install (backend)
        working-directory: ${{ env.BACKEND_DIR }}
        run: npm ci

      - name: Lint (backend)
        working-directory: ${{ env.BACKEND_DIR }}
        run: npm run lint --if-present

      - name: Unit tests (backend)
        working-directory: ${{ env.BACKEND_DIR }}
        run: npm test -- --coverage
        env:
          NODE_ENV: test

      - name: E2E tests (backend, SQLite in-memory)
        working-directory: ${{ env.BACKEND_DIR }}
        run: npm run test:e2e
        env:
          NODE_ENV: test
          DATABASE_TYPE: sqlite
          DATABASE_DATABASE: ":memory:"
          DATABASE_SYNCHRONIZE: "true"
          DATABASE_LOGGING: "false"

      - name: Upload backend coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: ${{ env.BACKEND_DIR }}/coverage

  frontend-e2e:
    name: Frontend Build & E2E
    runs-on: ubuntu-latest
    timeout-minutes: 25
    needs: [backend-tests]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            ${{ env.BACKEND_DIR }}/package-lock.json
            ${{ env.FRONTEND_DIR }}/package-lock.json

      - name: Install (backend)
        working-directory: ${{ env.BACKEND_DIR }}
        run: npm ci
      - name: Build (backend)
        working-directory: ${{ env.BACKEND_DIR }}
        run: npm run build

      - name: Install (frontend)
        working-directory: ${{ env.FRONTEND_DIR }}
        run: npm ci
      - name: Unit tests (frontend)
        working-directory: ${{ env.FRONTEND_DIR }}
        run: npm test -- --coverage

      - name: Build (frontend)
        working-directory: ${{ env.FRONTEND_DIR }}
        env:
          VITE_API_URL: http://127.0.0.1:3000
        run: npm run build

      - name: Install Playwright Chromium
        working-directory: ${{ env.FRONTEND_DIR }}
        run: npx playwright install --with-deps chromium

      - name: E2E (Playwright)
        working-directory: ${{ env.FRONTEND_DIR }}
        env:
          CI: 'true'
          PLAYWRIGHT_BASE_URL: http://127.0.0.1:5173
        run: npx playwright test --project=chromium --reporter=line

      - name: Upload Playwright artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: ${{ env.FRONTEND_DIR }}/playwright-report
